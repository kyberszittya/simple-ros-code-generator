/*
 * generated by Xtext 2.21.0
 */
package hu.sze.aut.ros.middleware.statepubsub.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.Node
import hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.LanguageType
import hu.sze.aut.code.generator.ros2.CodeTemplatePython
import hu.sze.aut.code.generator.ros2.CodeTemplateCppRos2
import hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.MiddlewareNetwork
import hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.NetworkType
import hu.sze.aut.code.generator.ros.RosCodeTemplates
import hu.sze.aut.code.generator.ros.GenerateYamlConfiguration

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class RosNetworkDslGenerator extends AbstractGenerator {
	
	def static void generateRos2Program(IFileSystemAccess2 fsa, Node n)
	{
		switch (n.language)
		{
			case LanguageType::PYTHON:
			{
				fsa.generateFile('''«n.rospackage»/scripts/«n.name».py''', CodeTemplatePython::generatePythonNode(n))				
			}
			case LanguageType::CPP:
			{
				fsa.generateFile('''«n.rospackage»/include/«n.rospackage»/gen_«n.name.toLowerCase».hpp''', CodeTemplateCppRos2::generateRos2InterfaceHeader(n))
				fsa.generateFile('''«n.rospackage»/src/gen_«n.name.toLowerCase».cpp''', CodeTemplateCppRos2::generateRos2Source(n))
			}
		}
	}
	
	def static void generateRosProgram(IFileSystemAccess2 fsa, Node n)
	{
		switch (n.language)
		{
			case LanguageType::CPP:
			{
				if (n.nodeparameters.length > 0)
				{
					for (g: GenerateYamlConfiguration::selectGeneratedStructures(n))
					{
						fsa.generateFile(
							'''«n.rospackage»/include/«n.rospackage»/«g.name.toLowerCase»_struct.hpp''',						
							GenerateYamlConfiguration::generateParamStructure(n, g)							
						)
					}
					fsa.generateFile('''«n.rospackage»/include/«n.rospackage»/default_config_«n.name.toLowerCase».hpp''', GenerateYamlConfiguration::generateDefaultParameterValueHeader(n))
					fsa.generateFile('''«n.rospackage»/src/gen_config_«n.name.toLowerCase».cpp''', GenerateYamlConfiguration::generateYamlConfigReaderRos(n))
				}
				
				fsa.generateFile('''«n.rospackage»/include/«n.rospackage»/gen_«n.name.toLowerCase».hpp''', RosCodeTemplates::generateRosInterfaceHeader(n))
				fsa.generateFile('''«n.rospackage»/src/gen_«n.name.toLowerCase».cpp''', RosCodeTemplates::generateInterfaceRosSource(n))
			}
		}
	}
	
	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
	
		val MiddlewareNetwork network = resource.allContents.filter[it instanceof MiddlewareNetwork].head as MiddlewareNetwork
		val mid_type = network.networktype
		
		switch(mid_type)
		{
			case NetworkType::ROS2:
			{
				resource.allContents.filter[it instanceof Node].forEach[
					val n = it as Node
					generateRos2Program(fsa, n)
							
				]
			}
			case NetworkType::ROS1:
			{
				resource.allContents.filter[it instanceof Node].forEach[
					val n = it as Node
					generateRosProgram(fsa, n)
					fsa.generateFile(
						'''«n.rospackage»/src/gen_«n.name.toLowerCase»_dyncfg_callback.cpp''',
						GenerateYamlConfiguration::generateCallbackGenerateDynamicCfgCallback(n)
					)
						
				]
			}
		}
		network.node.filter[it instanceof Node].forEach[
			val n = it as Node
			fsa.generateFile('''«n.rospackage»/yaml/default.yaml''', 
				GenerateYamlConfiguration::generateNodeYamlConfiguration(n)
			)			
			fsa.generateFile('''«n.rospackage»/dyncfg/«it.name.toFirstUpper».cfg''',
				GenerateYamlConfiguration::generateDynamicReconfigureFromParameters(it)
			)
			
		]		
	
//		fsa.generateFile('greetings.txt', 'People to greet: ' + 
//			resource.allContents
//				.filter(Greeting)
//				.map[name]
//				.join(', '))
	}
}
